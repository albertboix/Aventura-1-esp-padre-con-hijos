<!DOCTYPE html>
<html lang="es">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Aventura 1: Descubre Valencia (Padre)</title>
<style>
    body {
        font-family: "Book Antiqua", "Palatino Linotype", "Palatino", Georgia, serif;
        margin: 1em;
        background: #fff;
        color: #222;
        font-size: 16px;
        display: flex;
        flex-direction: column;
        align-items: center;
        min-height: calc(100vh - 2em);
        justify-content: flex-start;
    }
    h2 {
        margin-bottom: 0.8em;
        text-align: center;
        width: 100%;
    }
    #reto-container {
        /* Los bordes deben ser siempre de igual grosor. */
        border: 3px solid #ccc; /* Grosor inicial */
        border-radius: 8px;
        padding: 0;
        margin-bottom: 1em;
        position: relative;
        min-height: 250px;
        width: 100%;
        max-width: 980px;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
    }

    #reto-iframe, #puzzleIframe {
        width: 100%;
        height: 600px;
        border: none;
        display: none;
    }

    #button-container-padre {
        display: flex;
        flex-wrap: wrap;
        gap: 1em;
        margin-top: 1em;
        justify-content: center;
        width: 100%;
        min-height: 40px;
    }

    button.btn-padre {
        padding: 0.6em 1.2em;
        font-size: 1.1em;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        background-color: #0077cc;
        color: white;
        user-select: none;
        transition: background-color 0.3s ease;
    }
    button.btn-padre:hover {
        background-color: #005699;
    }
    button.btn-padre:disabled {
        background-color: #999;
        cursor: not-allowed;
    }

    #btnNextAfterReto {
        display: none;
        background-color: #0077cc;
    }
    #btnNextAfterReto:hover {
        background-color: #005699;
    }

    /* Clases para el borde del contenedor, aplicadas por el padre */
    #reto-container.correct {
        border-color: #28a745;
    }
    #reto-container.incorrect {
        border-color: #c00;
    }
    #reto-container.ready {
        border-color: #0077cc;
    }

    /* Media Queries para pantallas más pequeñas */
    @media (max-width: 800px) and (orientation: landscape) {
        h2 {
            display: none;
        }
        body {
            margin: 0.5em;
        }
        #reto-container {
            min-height: auto;
            height: calc(100dvh - 80px);
            padding: 0;
            margin-bottom: 0.5em;
        }
        #reto-iframe, #puzzleIframe {
            height: 100%;
            max-width: 100%;
        }
        button.btn-padre {
            font-size: 1em;
            padding: 0.5em 1em;
        }
    }

    @media (max-width: 600px) and (orientation: portrait) {
        #reto-iframe, #puzzleIframe {
            height: 400px;
        }
        #reto-container {
            min-height: 400px;
        }
    }
</style>
</head>
<body>

<h2>Aventura 1: Descubre Valencia</h2>
<div id="reto-container">
    <iframe id="reto-iframe" src="Aventura_1_retos_espanol.html"></iframe>
    <iframe id="puzzleIframe"></iframe>
</div>

<div id="button-container-padre">
    <button id="btnNextAfterReto" class="btn-padre">Continue su Aventura</button>
</div>

<script>
// --- Secuencia de la Aventura 1 en Español (solo tipos e índices) ---
const secuenciaAventura = [
    // --- PARADA 1: Torres de Serranos ---
    { nombreParada: "Torres de Serranos", ubicacion: { lat: 39.4795, lon: -0.3758, radio: 20 }, pasos: [
        { tipo: "audio", idAudio: "audio_serranos_intro" }, // ID para el futuro hijo de audio
        { tipo: "reto-interactivo", indexRetoHijo: 0 }, // Corresponde al reto 1 en Aventura_1_retos_espanol.html
        { tipo: "reto-interactivo", indexRetoHijo: 1 }, // Corresponde al reto 2
        { tipo: "reto-interactivo", indexRetoHijo: 2 }  // Corresponde al reto 3
    ]},

    // --- PARADA 2: Calle Muro de Santa Ana ---
    { nombreParada: "Calle Muro de Santa Ana", ubicacion: { lat: 39.4770, lon: -0.3780, radio: 15 }, pasos: [
        { tipo: "audio", idAudio: "audio_muro_santa_ana" },
        { tipo: "reto-interactivo", indexRetoHijo: 3 }, // Reto 4
        { tipo: "reto-interactivo", indexRetoHijo: 4 }, // Reto 5
        { tipo: "reto-interactivo", indexRetoHijo: 5 }  // Reto 6
    ]},

    // --- PARADA 3: Plaza de la Virgen ---
    { nombreParada: "Plaza de la Virgen", ubicacion: { lat: 39.4752, lon: -0.3752, radio: 25 }, pasos: [
        { tipo: "audio", idAudio: "audio_plaza_virgen" },
        { tipo: "reto-interactivo", indexRetoHijo: 6 }, // Reto 7
        { tipo: "puzzle", src: "P8_puzzle_plaza_virgen.html" } // Puzzle 8
    ]},

    // --- PARADA 4: Fachada de la Catedral (Puerta de los Apóstoles) ---
    { nombreParada: "Fachada de la Catedral", ubicacion: { lat: 39.4752, lon: -0.3750, radio: 10 }, pasos: [
        { tipo: "audio", idAudio: "audio_catedral_fachada" },
        { tipo: "reto-interactivo", indexRetoHijo: 7 }, // Reto 9
        { tipo: "reto-interactivo", indexRetoHijo: 8 }  // Reto 10
    ]},

    // --- PARADA 5: Calle Miguelete ---
    { nombreParada: "Calle Miguelete", ubicacion: { lat: 39.4754, lon: -0.3740, radio: 15 }, pasos: [
        { tipo: "audio", idAudio: "audio_miguelete" },
        { tipo: "reto-interactivo", indexRetoHijo: 9 }, // Reto 11
        { tipo: "reto-interactivo", indexRetoHijo: 10 } // Reto 12
    ]},

    // --- PARADA 6: Baños Árabes (en el Palacio de Benicarló) ---
    { nombreParada: "Baños Árabes", ubicacion: { lat: 39.4760, lon: -0.3735, radio: 15 }, pasos: [
        { tipo: "audio", idAudio: "audio_banos_arabes" },
        { tipo: "reto-interactivo", indexRetoHijo: 11 }, // Reto 13
        { tipo: "reto-interactivo", indexRetoHijo: 12 }, // Reto 14
        { tipo: "reto-interactivo", indexRetoHijo: 13 } // Reto 15
    ]},

    // --- PARADA 7: Plaza del Ayuntamiento ---
    { nombreParada: "Plaza del Ayuntamiento", ubicacion: { lat: 39.4695, lon: -0.3768, radio: 20 }, pasos: [
        { tipo: "audio", idAudio: "audio_ayuntamiento" },
        { tipo: "reto-interactivo", indexRetoHijo: 14 }, // Reto 16
        { tipo: "reto-interactivo", indexRetoHijo: 15 }  // Reto 17
    ]},

    // --- PARADA 8: Plaza de Toros y Estación del Norte ---
    { nombreParada: "Plaza de Toros y Estación del Norte", ubicacion: { lat: 39.4678, lon: -0.3768, radio: 30 }, pasos: [
        { tipo: "audio", idAudio: "audio_toros_estacion" },
        { tipo: "puzzle", src: "P18_puzzle_plaza_de_Toros_y_estacion_norte.html" } // Puzzle 18
    ]},

    // --- PARADA 9: Mercado Central ---
    { nombreParada: "Mercado Central", ubicacion: { lat: 39.4735, lon: -0.3775, radio: 20 }, pasos: [
        { tipo: "audio", idAudio: "audio_mercado_central" },
        { tipo: "reto-interactivo", indexRetoHijo: 16 } // Reto 19
    ]},

    // --- PARADA 10: Edificio de Correos ---
    { nombreParada: "Edificio de Correos", ubicacion: { lat: 39.4690, lon: -0.3760, radio: 10 }, pasos: [
        { tipo: "audio", idAudio: "audio_correos" },
        { tipo: "reto-interactivo", indexRetoHijo: 17 }, // Reto 20
        { tipo: "reto-interactivo", indexRetoHijo: 18 }, // Reto 21
        { tipo: "reto-interactivo", indexRetoHijo: 19 }, // Reto 22
        { tipo: "reto-interactivo", indexRetoHijo: 20 }  // Reto 23
    ]},

    // --- PARADA 11: Iglesia de San Nicolás ---
    { nombreParada: "Iglesia de San Nicolás", ubicacion: { lat: 39.4765, lon: -0.3790, radio: 15 }, pasos: [
        { tipo: "audio", idAudio: "audio_san_nicolas" },
        { tipo: "reto-interactivo", indexRetoHijo: 21 }, // Reto 24
        { tipo: "reto-interactivo", indexRetoHijo: 22 }  // Reto 25
    ]},

    // --- PARADA 12: Lonja de la Seda ---
    { nombreParada: "Lonja de la Seda", ubicacion: { lat: 39.4740, lon: -0.3760, radio: 20 }, pasos: [
        { tipo: "audio", idAudio: "audio_lonja_seda" },
        { tipo: "puzzle", src: "P26_puzzle_lonja.html" }, // Puzzle 26
        { tipo: "reto-interactivo", indexRetoHijo: 23 }, // Reto 27
        { tipo: "reto-interactivo", indexRetoHijo: 24 }, // Reto 28
        { tipo: "reto-interactivo", indexRetoHijo: 25 }, // Reto 29
        { tipo: "reto-interactivo", indexRetoHijo: 26 }, // Reto 30
        { tipo: "reto-interactivo", indexRetoHijo: 27 }, // Reto 31 (Extra)
        { tipo: "reto-interactivo", indexRetoHijo: 28 }  // Reto 32
    ]}
    // Añade más paradas aquí según sea necesario para completar tu aventura.
];

let indiceParadaActual = 0;
let indicePasoActual = 0;

const retoContainer = document.getElementById("reto-container");
const retoIframe = document.getElementById("reto-iframe");
const puzzleIframe = document.getElementById("puzzleIframe");
const btnNextAfterReto = document.getElementById("btnNextAfterReto");

let retoHijoEstaListo = false; // Bandera para saber si el iframe del reto está listo

// Función para avanzar al siguiente paso de la aventura
function avanzarPaso() {
    indicePasoActual++;
    const paradaActual = secuenciaAventura[indiceParadaActual];

    if (paradaActual && indicePasoActual < paradaActual.pasos.length) {
        // Todavía hay pasos en la parada actual, mostrar el siguiente
        mostrarPasoAventura();
    } else {
        // No hay más pasos en la parada actual, avanzar a la siguiente parada
        indiceParadaActual++;
        indicePasoActual = 0; // Resetear el índice de paso para la nueva parada

        if (indiceParadaActual < secuenciaAventura.length) {
            // Hay más paradas, mostrar el primer paso de la nueva parada
            mostrarPasoAventura();
        } else {
            // ¡La aventura ha terminado!
            alert("¡Has terminado todos los pasos de la Aventura 1!");
            // Puedes reiniciar la aventura, redirigir, o mostrar un mensaje final.
            indiceParadaActual = 0;
            indicePasoActual = 0;
            retoIframe.style.display = "none";
            puzzleIframe.style.display = "none";
            btnNextAfterReto.style.display = "none";
            retoContainer.innerHTML = '<p style="text-align: center; padding: 2em; font-size: 1.5em;">¡Aventura Completada!</p>';
        }
    }
}

// Función para mostrar el paso actual (audio, coordenadas, reto, puzzle)
function mostrarPasoAventura() {
    retoContainer.classList.remove("correct", "incorrect"); // Limpiar bordes de estado
    btnNextAfterReto.style.display = "none"; // Ocultar botón de "Continuar"

    const paradaActual = secuenciaAventura[indiceParadaActual];
    if (!paradaActual) {
        console.error("No hay parada actual definida.");
        return;
    }

    const pasoActual = paradaActual.pasos[indicePasoActual];

    if (!pasoActual) {
        console.error("No hay paso actual definido en la parada:", paradaActual.nombreParada);
        return;
    }

    // Ocultar ambos iframes por defecto antes de mostrar el correcto
    retoIframe.style.display = "none";
    puzzleIframe.style.display = "none";
    retoContainer.innerHTML = ''; // Limpiar cualquier mensaje de "cargando"

    switch (pasoActual.tipo) {
        case "audio":
            // --- LÓGICA FUTURA PARA EL HIJO DE AUDIO ---
            // Aquí, en el futuro, harías:
            // audioIframe.style.display = "block";
            // audioIframe.contentWindow.postMessage({ type: "reproducirAudio", idAudio: pasoActual.idAudio }, "*");
            // Por ahora, solo avanzamos si no hay un hijo de audio
            console.log(`Reproduciendo audio: ${pasoActual.idAudio}`);
            alert(`Simulando audio: ${pasoActual.idAudio}\nPulsa OK para continuar.`); // Simulación
            avanzarPaso(); // Avanza automáticamente después del audio simulado
            break;

        case "coordenadas":
            // --- LÓGICA FUTURA PARA EL HIJO DE COORDENADAS/GPS ---
            // Aquí, en el futuro, harías:
            // gpsIframe.style.display = "block";
            // gpsIframe.contentWindow.postMessage({ type: "irA", lat: pasoActual.ubicacion.lat, lon: pasoActual.ubicacion.lon, radio: pasoActual.ubicacion.radio }, "*");
            // Por ahora, solo avanzamos si no hay un hijo de GPS
            console.log(`Moviendo a coordenadas: ${JSON.stringify(paradaActual.ubicacion)}`);
            alert(`Simulando llegada a: ${paradaActual.nombreParada} (${paradaActual.ubicacion.lat}, ${paradaActual.ubicacion.lon})\nPulsa OK para continuar.`); // Simulación
            avanzarPaso(); // Avanza automáticamente después de la simulación de coordenadas
            break;

        case "reto-interactivo":
            retoIframe.style.display = "block"; // Mostrar el iframe del reto interactivo
            retoContainer.classList.add("ready"); // Indicar que el padre está esperando respuesta

            // Envía el índice del reto al iframe solo si está listo
            if (retoHijoEstaListo) {
                enviarRetoAInteractivoHijo(pasoActual.indexRetoHijo);
            } else {
                // Si el hijo aún no está listo, el mensaje se enviará cuando recibamos "reto-hijo-listo"
                retoContainer.innerHTML = '<p style="text-align: center; padding: 2em;">Cargando reto interactivo...</p>';
                console.log("Hijo de retos aún no listo, esperando para enviar reto...");
            }
            break;

        case "puzzle":
            puzzleIframe.src = pasoActual.src; // Cargar el puzzle específico
            puzzleIframe.style.display = "block"; // Mostrar el iframe del puzzle
            retoContainer.classList.add("ready"); // Indicar que el padre está esperando respuesta
            break;

        default:
            console.error("Tipo de paso de aventura desconocido:", pasoActual.tipo);
            avanzarPaso(); // Intenta avanzar para no quedarse atascado
    }
}

// Función para enviar el índice del reto al iframe de retos interactivos
function enviarRetoAInteractivoHijo(index) {
    if (retoIframe.contentWindow) {
        retoIframe.contentWindow.postMessage({ type: "mostrarRetoIndex", index: index }, "*");
        console.log("Enviado retoIndex", index, "a Aventura_1_retos_espanol.html");
    } else {
        console.error("No se puede acceder a contentWindow del iframe de retos.");
    }
}

// --- Listener para mensajes de los iframes hijos ---
window.addEventListener("message", (event) => {
    // Es buena práctica verificar el origen en producción para seguridad.
    // if (event.origin !== window.location.origin) return; // Asegúrate de ajustar esto a tu dominio

    console.log("Mensaje recibido del hijo:", event.data);

    // Mensajes del hijo Aventura_1_retos_espanol.html
    if (event.data && typeof event.data === 'object') {
        if (event.data.type === "reto-hijo-listo") {
            retoHijoEstaListo = true;
            // Si el hijo está listo y el paso actual es un reto interactivo, enviarle el reto
            const paradaActual = secuenciaAventura[indiceParadaActual];
            const pasoActual = paradaActual ? paradaActual.pasos[indicePasoActual] : null;

            if (pasoActual && pasoActual.tipo === "reto-interactivo") {
                enviarRetoAInteractivoHijo(pasoActual.indexRetoHijo);
            }
        }
        else if (event.data.type === "reto-interactivo-completado") {
            retoContainer.classList.remove("ready", "incorrect");
            retoContainer.classList.add("correct");
            btnNextAfterReto.style.display = "inline-block";
            // No avanza automáticamente, espera al botón del padre
        }
        else if (event.data.type === "reto-interactivo-fallado") {
            retoContainer.classList.remove("ready", "correct");
            retoContainer.classList.add("incorrect");
            btnNextAfterReto.style.display = "inline-block";
            // No avanza automáticamente, espera al botón del padre
        }
        else if (event.data.type === "reto-respuesta-mostrada") {
            btnNextAfterReto.style.display = "inline-block";
            // Se asume que después de ver la respuesta, el usuario puede avanzar.
        }
    }

    // Mensajes de los iframes de puzzles (pueden ser los mismos mensajes para simplificar)
    // Asumo que tus puzzles actuales envían "advance-to-next" o "puzzle-state-timeout"
    if (event.data === "advance-to-next") {
        retoContainer.classList.remove("ready", "incorrect");
        retoContainer.classList.add("correct");
        btnNextAfterReto.style.display = "inline-block";
    }
    else if (event.data === "puzzle-state-timeout") {
        retoContainer.classList.remove("ready", "correct");
        retoContainer.classList.add("incorrect");
        btnNextAfterReto.style.display = "inline-block";
    }
});

// --- Event Listener para el botón de avance principal del padre ---
btnNextAfterReto.addEventListener("click", () => {
    avanzarPaso(); // Llama a la función que gestiona el avance en la secuencia
});

// Iniciar la aventura al cargar la página
window.addEventListener("DOMContentLoaded", () => {
    // Si el iframe de retos interactivos ya cargó y envió "reto-hijo-listo", mostramos el primer paso
    // Si no, el mensaje "reto-hijo-listo" activará el primer paso después de su carga.
    // Inicialmente, el reto-iframe tiene src="Aventura_1_retos_espanol.html" y estará oculto.
    // El "reto-hijo-listo" desde el iframe de retos es el que dispara la visualización del primer reto si es interactivo.
    // Para el primer paso si es audio o coordenadas, podemos llamarlo directamente
    const primerPaso = secuenciaAventura[0].pasos[0];
    if (primerPaso.tipo === "audio" || primerPaso.tipo === "coordenadas" || retoHijoEstaListo) {
        mostrarPasoAventura();
    } else {
        retoContainer.innerHTML = '<p style="text-align: center; padding: 2em; font-size: 1.2em;">Preparando la aventura...</p>';
    }
});
</script>
</body>
</html>
